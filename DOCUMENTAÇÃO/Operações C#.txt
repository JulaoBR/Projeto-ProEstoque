//frmCli é um objeto da tela de cadastro de cliente (formulario do cliente)
//é criado um objeto linha do tipo DataGridViewRow que depois recebera
//a linha selecionada do grid = linha = gridCleinte.CurrentRow

	//objeto da tela do formulario do cliente
	frmCliente frmCli;

	try
            {
                DataGridViewRow linha;
                linha = dgvClientes.CurrentRow;
                frmCli.mskCPF.Text = linha.Cells["CPF"].Value.ToString();
                frmCli.txtNome.Text = linha.Cells["Nome"].Value.ToString();
                frmCli.txtEndereco.Text = linha.Cells["Endereco"].Value.ToString();                
                frmCli.mskTelefone.Text = linha.Cells["Telefone"].Value.ToString();
                this.Close();
                frmCli.btnAlterar.Enabled = true;
                frmCli.btnExcluir.Enabled = true;
            }
            catch (Exception ex)
            {
                MessageBox.Show("Selecione um cliente\n" + ex.Message, "ERRO", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

//=======================================================================================================

//Sistema para perguntar ao usuario se ele deseja realizar tal operação, pegando o resultado que ele escolher e executando
//a ação 

if (MessageBox.Show("Deseja realmente excluir este cliente?", "Excluir cliente", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
{
	//Conteudo
}else
{
	//Conteudo
}

//=======================================================================================================

//Classe de validação de CFP

public class Validacoes
    {
        public static bool validarCPF(string cpf)
        {
            string valor = cpf.Replace(".", "");
            valor = valor.Replace("-", "");
  
            if (valor.Length != 11)
                return false;
  
            bool igual = true;
            for (int i = 1; i < 11 && igual; i++)
                if (valor[i] != valor[0])
                    igual = false;
  
            if (igual || valor == "12345678909")
                return false;
  
            int[] numeros = new int[11];
            for (int i = 0; i < 11; i++)
                numeros[i] = int.Parse(valor[i].ToString());
  
            int soma = 0;
            for (int i = 0; i < 9; i++)
                soma += (10 - i) * numeros[i];
  
            int resultado = soma % 11;
            if (resultado == 1 || resultado == 0)
            {
                if (numeros[9] != 0)
                    return false;
            }
            else if (numeros[9] != 11 - resultado)
                return false;
            soma = 0;
  
            for (int i = 0; i < 10; i++)
                soma += (11 - i) * numeros[i];
  
            resultado = soma % 11;
            if (resultado == 1 || resultado == 0)
            {
                if (numeros[10] != 0)
                    return false;
            }
            else
                if (numeros[10] != 11 - resultado)
                    return false;
            return true;
        }
    }

//=======================================================================================================
